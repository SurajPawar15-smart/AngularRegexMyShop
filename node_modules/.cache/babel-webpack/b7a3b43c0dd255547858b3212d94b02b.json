{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { CartItem } from '../models/cart-item';\nimport { cartUrl } from '../config/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getCartItems() {\n      //TODO: Mapping the obtained result to our CartItem props. (pipe() and map())\n      return this.http.get(cartUrl).pipe(map(result => {\n        let cartItems = [];\n\n        for (let item of result) {\n          let productExists = false;\n\n          for (let i in cartItems) {\n            if (cartItems[i].productId === item.product.id) {\n              cartItems[i].qty++;\n              productExists = true;\n              break;\n            }\n          }\n\n          if (!productExists) {\n            cartItems.push(new CartItem(item.id, item.product));\n          }\n        }\n\n        return cartItems;\n      }));\n    }\n\n    addProductToCart(product) {\n      return this.http.post(cartUrl, {\n        product\n      });\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}